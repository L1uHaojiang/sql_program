<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.manage.mapper.TeachersMapper">
    
    <resultMap type="Teachers" id="TeachersResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="departmentId"    column="department_id"    />
        <result property="professionalId"    column="professional_id"    />
        <result property="title"    column="title"    />
    </resultMap>

    <sql id="selectTeachersVo">
        select id, name, department_id, professional_id, title from teachers
    </sql>

    <select id="selectTeachersList" parameterType="Teachers" resultMap="TeachersResult">
        <include refid="selectTeachersVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="departmentId != null "> and department_id = #{departmentId}</if>
            <if test="professionalId != null "> and professional_id = #{professionalId}</if>
            <if test="title != null  and title != ''"> and title = #{title}</if>
        </where>
    </select>
    
    <select id="selectTeachersById" parameterType="Long" resultMap="TeachersResult">
        <include refid="selectTeachersVo"/>
        where id = #{id}
    </select>

    <insert id="insertTeachers" parameterType="Teachers" useGeneratedKeys="true" keyProperty="id">
        insert into teachers
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="departmentId != null">department_id,</if>
            <if test="professionalId != null">professional_id,</if>
            <if test="title != null">title,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="departmentId != null">#{departmentId},</if>
            <if test="professionalId != null">#{professionalId},</if>
            <if test="title != null">#{title},</if>
         </trim>
    </insert>

    <update id="updateTeachers" parameterType="Teachers">
        update teachers
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="departmentId != null">department_id = #{departmentId},</if>
            <if test="professionalId != null">professional_id = #{professionalId},</if>
            <if test="title != null">title = #{title},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTeachersById" parameterType="Long">
        delete from teachers where id = #{id}
    </delete>

    <delete id="deleteTeachersByIds" parameterType="String">
        delete from teachers where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>